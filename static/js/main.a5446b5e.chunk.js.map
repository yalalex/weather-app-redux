{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","actions/weatherActions.js","actions/types.js","components/layout/Alert.js","components/places/Search.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Daily.js","components/weather/PeriodItem.js","components/weather/Hourly.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","components/pages/NotFound.js","reducers/weatherReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","connect","state","weather","switchLang","lang","type","payload","switchUnits","units","_ref","_ref$weather","react_default","a","createElement","className","react_router_dom","to","onClick","alert","searchPlaces","text","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","config","res","wrap","_context","prev","next","headers","x-rapidapi-host","x-rapidapi-key","process","axios","get","concat","sent","data","length","setTimeout","stop","_x","apply","this","arguments","clearSearch","setAlert","msg","places","history","location","_useState","useState","_useState2","slicedToArray","setText","useEffect","push","onSubmit","e","preventDefault","name","value","placeholder","onChange","target","pathname","current","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","time","offset","react","dist_default","locale","unix","format","alt","description","src","icon","style","width","toFixed","Spinner","spinner","margin","display","forecast15","loading","layout_Spinner","map","weather_DayItem","key","period","dt","main","temp","forecastToday","weather_PeriodItem","getWeather","place","_ref2","_callee2","city","latitude","longitude","_res$data","timezone","wind","sys","pressure","humidity","sunrise","sunset","resp","today","today48","un","respo","forecast","_context2","Date","getTimezoneOffset","speed","sky","list","slice","_x2","btn","setBtn","_useState3","_useState4","setTarget","switchButton","switchTarget","react_router","exact","path","component","Hourly","Daily","selectPlace","setTemp","setSky","_useState5","_useState6","setIcon","getPlaceWeather","regionCode","country","places_PlaceItem","id","href","initialState","combineReducers","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","layout_Navbar","layout_Alert","Search","Places","Forecast","About","NotFound","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a5446b5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { switchLang, switchUnits } from '../../actions/weatherActions';\n\nconst Navbar = ({ weather: { units, lang }, switchLang, switchUnits }) => {\n  return (\n    <nav className='navbar bg-primary'>\n      <h1>\n        <i className='fas fa-cloud-sun-rain' /> Weather app\n      </h1>\n      <ul>\n        <li>\n          <Link to='/weather-app-redux'>\n            {lang === 'en' ? 'Search' : 'Поиск'}\n          </Link>\n        </li>\n        <li>\n          <Link to='/weather-app-redux/about'>\n            {lang === 'en' ? 'About' : 'Инфо'}\n          </Link>\n        </li>\n        <li>\n          <div className='switch'>\n            <div className='select'>\n              {units === 'metric' ? '°C' : '°F'}\n              <i className='fa fa-angle-down' />\n            </div>\n            <ul className='select-drop'>\n              <li onClick={() => switchUnits(units)}>\n                {units === 'metric' ? '°F' : '°C'}\n              </li>\n            </ul>\n          </div>\n        </li>\n        <li>\n          <div className='switch'>\n            <div className='select'>\n              {lang === 'en' ? 'EN' : 'RU'}\n              <i className='fa fa-angle-down' />\n            </div>\n            <ul className='select-drop'>\n              <li onClick={() => switchLang(lang)}>\n                {lang === 'en' ? 'RU' : 'EN'}\n              </li>\n            </ul>\n          </div>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  weather: PropTypes.object.isRequired,\n  switchLang: PropTypes.func.isRequired,\n  switchUnits: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(\n  mapStateToProps,\n  { switchLang, switchUnits }\n)(Navbar);\n","import axios from 'axios';\r\nimport {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from './types';\r\n\r\n//Set alert\r\nexport const setAlert = msg => dispatch => {\r\n  dispatch({ type: SET_ALERT, payload: msg });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n};\r\n\r\n//Search places to get weather for\r\nexport const searchPlaces = (text, lang) => async dispatch => {\r\n  dispatch({ type: SET_LOADING });\r\n  const config = {\r\n    headers: {\r\n      'x-rapidapi-host': 'wft-geo-db.p.rapidapi.com',\r\n      'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\r\n    }\r\n  };\r\n  const res = await axios.get(\r\n    `https://wft-geo-db.p.rapidapi.com/v1/geo/cities?limit=10&namePrefix=${text}&sort=-population&languageCode=${lang}`,\r\n    config\r\n  );\r\n  if (res.data.data.length === 0) {\r\n    const alert =\r\n      lang === 'en'\r\n        ? 'No cities found. Check the spelling and try again'\r\n        : 'Ничего не найдено. Проверьте правильность написания и попробуйте снова';\r\n    dispatch({ type: SET_ALERT, payload: alert });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n  } else {\r\n    dispatch({ type: SEARCH_PLACES, payload: res.data.data });\r\n  }\r\n};\r\n\r\n//Select place in search and get weather for it\r\nexport const selectPlace = place => {\r\n  return { type: SELECT_PLACE, payload: place };\r\n};\r\n\r\n//Get current weather\r\nexport const getWeather = (place, units) => async dispatch => {\r\n  dispatch({ type: SET_LOADING });\r\n  const { city, latitude, longitude } = place;\r\n  const res = await axios.get(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n  );\r\n  const { timezone, dt, main, wind, weather, sys } = res.data,\r\n    { temp, pressure, humidity } = main,\r\n    { sunrise, sunset } = sys;\r\n  const offset = new Date().getTimezoneOffset() * 60 + timezone;\r\n  const current = {\r\n    name: city,\r\n    dt,\r\n    temp,\r\n    wind: wind.speed,\r\n    pressure,\r\n    humidity,\r\n    weather: weather[0].main,\r\n    sky: weather[0].description,\r\n    icon: weather[0].icon,\r\n    offset\r\n  };\r\n  if (current.temp.toFixed() === '-0') current.temp = 0;\r\n  dispatch({ type: GET_CURRENT_WEATHER, payload: current });\r\n  //Get forecast for 48 hours\r\n  const resp = await axios.get(\r\n    `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n  );\r\n  const today = resp.data.list.slice(0, 16);\r\n  const today48 = today.map(period => {\r\n    if (period.main.temp.toFixed() === '-0') period.main.temp = 0;\r\n    //Change icons according to local time in requested place\r\n    if (sunrise + 86400 < period.dt && period.dt < sunset + 86400) {\r\n      period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n    } else if (sunset < period.dt && period.dt < sunrise + 86400) {\r\n      period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n    } else if (sunrise < period.dt && period.dt < sunset) {\r\n      period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n    } else if (sunset - 86400 < period.dt && period.dt < sunrise) {\r\n      period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n    }\r\n    return period;\r\n  });\r\n\r\n  dispatch({ type: GET_TODAY_WEATHER, payload: today48 });\r\n  //Get forecast for 15 days\r\n  const un = units === 'metric' ? 'M' : 'I';\r\n  const respo = await axios.get(\r\n    `https://api.weatherbit.io/v2.0/forecast/daily?lat=${latitude}&lon=${longitude}&units=${un}&key=${process.env.REACT_APP_WEATHERBIT_KEY}`\r\n  );\r\n  const forecast = respo.data.data.slice(1, 16);\r\n  const forecast15 = forecast.map(day => {\r\n    if (day.max_temp.toFixed() === '-0') day.max_temp = 0;\r\n    if (day.min_temp.toFixed() === '-0') day.min_temp = 0;\r\n    return day;\r\n  });\r\n  dispatch({ type: GET_FORECAST, payload: forecast15 });\r\n};\r\n\r\n//Switch language\r\nexport const switchLang = lang => {\r\n  return { type: SWITCH_LANG, payload: lang };\r\n};\r\n\r\n// Switch units\r\nexport const switchUnits = units => {\r\n  return { type: SWITCH_UNITS, payload: units };\r\n};\r\n\r\n//Clear search\r\nexport const clearSearch = () => {\r\n  return { type: CLEAR_SEARCH };\r\n};\r\n","export const SEARCH_PLACES = 'SEARCH_PLACES';\nexport const SELECT_PLACE = 'SELECT_PLACE';\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const GET_CURRENT_WEATHER = 'GET_CURRENT_WEATHER';\nexport const GET_TODAY_WEATHER = 'GET_TODAY_WEATHER';\nexport const GET_FORECAST = 'GET_FORECAST';\nexport const SWITCH_LANG = 'SWITCH_LANG';\nexport const SWITCH_UNITS = 'SWITCH_UNITS';\nexport const SET_LOADING = 'SET_LOADING';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ weather: { alert } }) => {\n  return (\n    alert !== null && (\n      <div className={`alert alert-dark text-center`}>\n        <i className='fas fa-info-circle' /> {alert}\n      </div>\n    )\n  );\n};\n\nAlert.propTypes = {\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  searchPlaces,\n  clearSearch,\n  setAlert\n} from '../../actions/weatherActions';\n\nconst Search = ({\n  weather: { lang, places },\n  history,\n  location,\n  searchPlaces,\n  clearSearch,\n  setAlert\n}) => {\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    history.push('/weather-app-redux');\n    //eslint-disable-next-line\n  }, [places]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (text === '') {\n      const alert =\n        lang === 'en'\n          ? 'Please enter something'\n          : 'Пожалуйста, введите что-нибудь';\n      setAlert(alert);\n    } else {\n      searchPlaces(text, lang);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className='form'>\n        <input\n          type='text'\n          name='text'\n          value={text}\n          placeholder={\n            lang === 'en'\n              ? 'Enter City Name...'\n              : 'Введите название города на русском языке...'\n          }\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value={lang === 'en' ? 'Search' : 'Поиск'}\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {places.length > 0 && location.pathname === '/weather-app-redux' && (\n        <button className='btn btn-grey btn-block my-1' onClick={clearSearch}>\n          {lang === 'en' ? 'Clear' : 'Очистить'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  weather: PropTypes.object.isRequired,\n  searchPlaces: PropTypes.func.isRequired,\n  clearSearch: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(\n  mapStateToProps,\n  { searchPlaces, clearSearch, setAlert }\n)(Search);\n","import React, { Fragment } from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst DayItem = ({ weather: { current, lang, units }, day }) => {\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day,\n    { offset } = current;\n  const time = ts + offset;\n  return (\n    <Fragment>\n      <div className='weatheritem'>\n        <div className='all-center'>\n          <h3>\n            <Moment locale={lang} unix format='ddd Do'>\n              {time}\n            </Moment>\n          </h3>\n        </div>\n        <div className='all-center'>\n          <img\n            alt={weather.description}\n            src={`https://www.weatherbit.io/static/img/icons/${weather.icon}.png`}\n            style={{ width: '70px' }}\n          />\n        </div>\n        <div className='all-center'>\n          <h2>\n            {max_temp.toFixed()}°/{min_temp.toFixed()}°\n          </h2>\n        </div>\n        <div className='conditions all-center'>\n          <div>\n            <ul>\n              <li>\n                <i className='fas fa-umbrella' />\n                {pop}%\n              </li>\n              <li>\n                <i className='fas fa-water' />\n                {rh}%\n              </li>\n            </ul>\n          </div>\n          <div>\n            <ul>\n              <li>\n                <i className='fas fa-wind' />\n                {wind_spd.toFixed(1)}\n                {lang === 'en'\n                  ? units === 'metric'\n                    ? 'm/s'\n                    : 'mph'\n                  : units === 'metric'\n                  ? 'м/c'\n                  : 'м/ч'}\n              </li>\n              <li>\n                <i className='fas fa-square' />\n                {pres.toFixed()}\n                {lang === 'en' ? 'mb' : 'мб'}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nDayItem.propTypes = {\n  day: PropTypes.object.isRequired,\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(mapStateToProps, null)(DayItem);\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () => (\n  <Fragment>\n    <img\n      src={spinner}\n      alt='Loading...'\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\n    />\n  </Fragment>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DayItem from './DayItem';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Daily = ({ weather: { forecast15, loading } }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='listitems'>\r\n        {forecast15.map(day => (\r\n          <DayItem key={day.ts} day={day} />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nDaily.propTypes = {\r\n  weather: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  weather: state.weather\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Daily);\r\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PeriodItem = ({ weather: { current, lang }, period }) => {\n  const { dt, main, weather } = period,\n    time = dt + current.offset;\n  return (\n    <div className='weatheritem'>\n      <div className='all-center'>\n        <h3>\n          <Moment locale={lang} unix format='ddd LT'>\n            {time}\n          </Moment>\n        </h3>\n      </div>\n      <div className='all-center'>\n        <img\n          alt={weather[0].description}\n          src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\n          style={{ width: '100px' }}\n        />\n      </div>\n      <div className='all-center'>\n        <h1>{main.temp.toFixed()}°</h1>\n      </div>\n    </div>\n  );\n};\n\nPeriodItem.propTypes = {\n  period: PropTypes.object.isRequired,\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(mapStateToProps, null)(PeriodItem);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport PeriodItem from './PeriodItem';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Hourly = ({ weather: { forecastToday, loading } }) => {\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <div className='listitems'>\r\n        {forecastToday.map(period => (\r\n          <PeriodItem key={period.dt} period={period} />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nHourly.propTypes = {\r\n  weather: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  weather: state.weather\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Hourly);\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Daily from './Daily';\r\nimport Hourly from './Hourly';\r\nimport Spinner from '../layout/Spinner';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { getWeather } from '../../actions/weatherActions';\r\n\r\nconst Forecast = ({\r\n  weather: { current, forecastToday, forecast15, loading, units, lang, place },\r\n  getWeather\r\n}) => {\r\n  const [btn, setBtn] = useState('');\r\n  const [target, setTarget] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (lang === 'en') {\r\n      setBtn('15-day forecast');\r\n      setTarget('15-day');\r\n    } else {\r\n      setBtn('Прогноз на 15 дней');\r\n      setTarget('15-day');\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    switchButton();\r\n    //eslint-disable-next-line\r\n  }, [lang, target]);\r\n\r\n  useEffect(() => {\r\n    getWeather(place, units);\r\n    //eslint-disable-next-line\r\n  }, [units]);\r\n\r\n  const switchTarget = target => {\r\n    if (target === '15-day') {\r\n      setTarget('current');\r\n    } else {\r\n      setTarget('15-day');\r\n    }\r\n  };\r\n\r\n  const switchButton = () => {\r\n    target === '15-day'\r\n      ? lang === 'en'\r\n        ? setBtn('15-day forecast')\r\n        : setBtn('Прогноз на 15 дней')\r\n      : lang === 'en'\r\n      ? setBtn('48-hr forecast')\r\n      : setBtn('Прогноз на 48 часов');\r\n  };\r\n\r\n  const {\r\n    name,\r\n    dt,\r\n    weather,\r\n    sky,\r\n    wind,\r\n    temp,\r\n    pressure,\r\n    humidity,\r\n    icon,\r\n    offset\r\n  } = current;\r\n  const time = dt + offset;\r\n  if (loading || forecastToday.length === 0) {\r\n    return <Spinner />;\r\n  } else\r\n    return (\r\n      <Router>\r\n        <Fragment>\r\n          <div className='card grid-2'>\r\n            <div className='card grid-2'>\r\n              <div className='all-center'>\r\n                <img\r\n                  alt={sky}\r\n                  src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\r\n                  style={{ width: '150px' }}\r\n                />\r\n              </div>\r\n              <div style={{ margin: 'auto 0' }}>\r\n                <h1>{temp.toFixed()}°</h1>\r\n                <h3>\r\n                  {forecast15[0].max_temp.toFixed()}°/\r\n                  {forecast15[0].min_temp.toFixed()}°\r\n                </h3>\r\n                <h2>{name}</h2>\r\n                <h4>\r\n                  <Moment locale={lang} unix format='LT'>\r\n                    {time}\r\n                  </Moment>\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div style={{ margin: 'auto 0' }}>\r\n              <ul>\r\n                <li>\r\n                  <h3>{lang === 'en' ? weather : 'Текущие условия:'}</h3>\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-water' />{' '}\r\n                  {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\r\n                  {humidity}%\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-wind' />{' '}\r\n                  {lang === 'en' ? 'Wind: ' : 'Ветер: '}\r\n                  {wind.toFixed(1)}{' '}\r\n                  {lang === 'en'\r\n                    ? units === 'metric'\r\n                      ? 'm/s'\r\n                      : 'mph'\r\n                    : units === 'metric'\r\n                    ? 'м/c'\r\n                    : 'м/ч'}\r\n                </li>\r\n                <li>\r\n                  <i className='fas fa-square' />{' '}\r\n                  {lang === 'en' ? 'Pressure: ' : 'Давление: '}\r\n                  {pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\r\n                </li>\r\n              </ul>\r\n              <Link\r\n                to={`/weather-app-redux/${target}/${name}`}\r\n                className='btn btn-dark btn-sm my-1'\r\n                onClick={() => switchTarget(target)}\r\n              >\r\n                {btn}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/weather-app-redux/current/:name'\r\n              component={Hourly}\r\n            />\r\n            <Route\r\n              exact\r\n              path='/weather-app-redux/15-day/:name'\r\n              component={Daily}\r\n            />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    );\r\n};\r\n\r\nForecast.propTypes = {\r\n  weather: PropTypes.object.isRequired,\r\n  getWeather: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  weather: state.weather\r\n});\r\n\r\nexport default connect(mapStateToProps, { getWeather })(Forecast);\r\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { selectPlace } from '../../actions/weatherActions';\n\nconst PlaceItem = ({ weather: { units }, selectPlace, place }) => {\n  const [temp, setTemp] = useState('');\n  const [sky, setSky] = useState('');\n  const [icon, setIcon] = useState('');\n\n  useEffect(() => {\n    getPlaceWeather();\n    //eslint-disable-next-line\n  }, [units]);\n\n  const getPlaceWeather = async () => {\n    const { latitude, longitude } = place;\n    const res = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\n    );\n    const { main, weather } = res.data;\n    if (main.temp.toFixed() === '-0') main.temp = 0;\n    setTemp(main.temp.toFixed());\n    setSky(weather[0].description);\n    setIcon(weather[0].icon);\n  };\n\n  const { city, regionCode, country } = place;\n  return (\n    <Link\n      to={`/weather-app-redux/current/${city}`}\n      onClick={() => selectPlace(place)}\n    >\n      <div className='placeitem'>\n        <h1>{temp}°</h1>\n        <img\n          alt={sky}\n          src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\n          style={{ width: '100px' }}\n        />\n        <div className='all-center'>\n          <h3>\n            {city}, {regionCode}\n          </h3>\n          <h4>{country}</h4>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nPlaceItem.propTypes = {\n  place: PropTypes.object.isRequired,\n  weather: PropTypes.object.isRequired,\n  selectPlace: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(\n  mapStateToProps,\n  { selectPlace }\n)(PlaceItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PlaceItem from './PlaceItem';\nimport Spinner from '../layout/Spinner';\n\nconst Places = ({ weather: { places, loading } }) => {\n  if (loading) {\n    return <Spinner />;\n  } else\n    return (\n      <div className='listitems'>\n        {places.map(place => (\n          <PlaceItem key={place.id} place={place} />\n        ))}\n      </div>\n    );\n};\n\nPlaces.propTypes = {\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Places);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst About = ({ weather: { lang } }) => {\n  return lang === 'en' ? (\n    <Fragment>\n      <h2>About this app</h2>\n      <p>\n        An application for searching weather in more than 134,000 cities in the\n        world.\n      </p>\n      <p>\n        Provides information on current weather, as well as a detailed forecast\n        for the next 48 hours and a forecast for 15 days.\n      </p>\n      <p>\n        Made by <a href='https://github.com/yalalex/'>Aliaksandr Yalouskikh</a>.\n      </p>\n    </Fragment>\n  ) : (\n    <Fragment>\n      <h2>О приложении</h2>\n      <p>Приложение для поиска погоды в более чем 134 000 городах мира.</p>\n      <p>\n        Предоставляет информацию по текущей погоде, а так же подробный прогноз\n        на ближайшие 48 часов и прогноз на 15 дней.\n      </p>\n      <p>\n        Сделал <a href='https://github.com/yalalex/'>Александр Еловских</a>.\n      </p>\n    </Fragment>\n  );\n};\n\nAbout.propTypes = {\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(mapStateToProps)(About);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst NotFound = ({ weather: { lang } }) => {\n  return lang === 'en' ? (\n    <Fragment>\n      <h2>Not Found</h2>\n      <p className='lead'>The page you are looking for does not exist...</p>\n    </Fragment>\n  ) : (\n    <Fragment>\n      <h2>Страница не найдена</h2>\n      <p className='lead'>Страница, которую вы ищете, не существует...</p>\n    </Fragment>\n  );\n};\n\nNotFound.propTypes = {\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(mapStateToProps)(NotFound);\n","import {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  units: 'metric',\r\n  lang: 'en',\r\n  loading: false,\r\n  alert: null,\r\n  places: [],\r\n  place: null,\r\n  current: {},\r\n  forecastToday: [],\r\n  forecast15: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_PLACES:\r\n      return {\r\n        ...state,\r\n        places: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        places: []\r\n      };\r\n    case SELECT_PLACE:\r\n      return {\r\n        ...state,\r\n        place: action.payload\r\n      };\r\n    case GET_CURRENT_WEATHER:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case GET_TODAY_WEATHER:\r\n      return {\r\n        ...state,\r\n        forecastToday: action.payload\r\n      };\r\n    case GET_FORECAST:\r\n      return {\r\n        ...state,\r\n        forecast15: action.payload,\r\n        loading: false\r\n      };\r\n    case SWITCH_LANG:\r\n      return {\r\n        ...state,\r\n        lang: action.payload === 'en' ? 'ru' : 'en'\r\n      };\r\n    case SWITCH_UNITS:\r\n      return {\r\n        ...state,\r\n        units: action.payload === 'metric' ? 'imperial' : 'metric'\r\n      };\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: action.payload\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: null,\r\n        loading: false\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\n\r\nexport default combineReducers({\r\n  weather: weatherReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <div className='container'>\n            <Alert />\n            <Route path='/weather-app-redux' component={Search} />\n            <Switch>\n              <Route exact path='/weather-app-redux' component={Places} />\n              <Route\n                exact\n                path='/weather-app-redux/current/:name'\n                component={Forecast}\n              />\n              <Route exact path='/weather-app-redux/about' component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'moment/locale/ru';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}