{"version":3,"sources":["components/layout/spinner.gif","actions/weatherActions.js","actions/types.js","components/layout/Navbar.js","components/layout/Alert.js","components/places/Search.js","components/weather/PeriodItem.js","components/weather/DayItem.js","components/layout/Spinner.js","components/weather/Forecast.js","components/places/PlaceItem.js","components/places/Places.js","components/pages/About.js","components/pages/NotFound.js","reducers/weatherReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","setLoading","type","connect","state","weather","switchLang","lang","payload","switchUnits","units","_ref","_ref$weather","react_default","a","createElement","className","react_router_dom","to","onClick","alert","searchPlaces","text","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","request","get","query","limit","namePrefix","sort","languageCode","set","process","then","res","body","data","length","setTimeout","catch","err","console","log","stop","_x","apply","this","arguments","clearSearch","setAlert","msg","places","history","location","_useState","useState","_useState2","slicedToArray","setText","useEffect","push","onSubmit","e","preventDefault","name","value","placeholder","onChange","target","pathname","PeriodItem","period","offset","dt","main","time","dist_default","locale","unix","format","alt","description","src","concat","icon","style","width","temp","toFixed","DayItem","day","ts","max_temp","min_temp","wind_spd","pop","pres","rh","react","Spinner","spinner","margin","display","getWeather","place","_ref2","_callee4","city","latitude","longitude","respo","_respo$data","timezone","wind","sys","pressure","humidity","sunrise","sunset","current","resp","today","un","forecast15","_context4","axios","sent","speed","sky","list","slice","map","_ref3","_callee2","_context2","_x3","_ref4","_callee3","_context3","_x4","_x2","forecastToday","loading","btn","setBtn","_useState3","_useState4","setTarget","switchButton","Date","getTimezoneOffset","layout_Spinner","switchTarget","react_router","exact","path","render","props","weather_PeriodItem","key","weather_DayItem","selectPlace","setTemp","setSky","_useState5","_useState6","setIcon","getPlaceWeather","_res$data","regionCode","country","places_PlaceItem","id","href","initialState","combineReducers","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","layout_Navbar","layout_Alert","component","Search","Places","Forecast","About","NotFound","ReactDOM","src_App_0","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2PCmI3BC,EAAa,WACxB,MAAO,CAAEC,KC1HgB,gBCsDZC,cAJS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,UAKf,CAAEC,WFkDsB,SAAAC,GACxB,MAAO,CAAEL,KC7GgB,cD6GGM,QAASD,IEnDvBE,YFuDW,SAAAC,GACzB,MAAO,CAAER,KCjHiB,eDiHGM,QAASE,KE1DzBP,CA1DA,SAAAQ,GAA2D,IAAAC,EAAAD,EAAxDN,QAAWK,EAA6CE,EAA7CF,MAAOH,EAAsCK,EAAtCL,KAAQD,EAA8BK,EAA9BL,WAAYG,EAAkBE,EAAlBF,YACtD,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BADf,gBAGAH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,sBACG,OAATX,EAAgB,SAAW,mCAGhCM,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,4BACG,OAATX,EAAgB,QAAU,6BAG/BM,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACF,WAAVN,EAAqB,QAAO,QAC7BG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAEfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACZH,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMV,EAAYC,KAClB,WAAVA,EAAqB,QAAO,YAKrCG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACH,OAATT,EAAgB,KAAO,KACxBM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAEfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACZH,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMb,EAAWC,KAClB,OAATA,EAAgB,KAAO,aCtBzBJ,cAJS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,UAGFF,CAlBD,SAAAQ,GAA4B,IAAdS,EAAcT,EAAzBN,QAAWe,MAC1B,OACY,OAAVA,GACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAS,gCACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,IACwCI,aCwE/BjB,cAJS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,UAKf,CAAEgB,aJ3DwB,SAACC,EAAMf,GAAP,sBAAAI,EAAAY,OAAAC,EAAA,EAAAD,CAAAE,EAAAX,EAAAY,KAAgB,SAAAC,EAAMC,GAAN,OAAAH,EAAAX,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1C/B,IACAgC,IACGC,IAAI,mDACJC,MAAM,CAAEC,MAAO,OACfD,MAAM,CAAEE,WAAYf,IACpBa,MAAM,CAAEG,KAAM,gBACdH,MAAM,CAAEI,aAAchC,IACtBiC,IAAI,kBAAmB,6BACvBA,IAAI,iBAAkBC,sDACtBD,IAAI,SAAU,oBACdE,KAAK,SAAAC,GACyB,IAAzBA,EAAIC,KAAKC,KAAKC,QAKhBlB,EAAS,CAAE1B,KCrCM,YDqCWM,QAHjB,OAATD,EACI,oDACA,4XAENwC,WAAW,kBAAMnB,EAAS,CAAE1B,KCrCR,kBDqC+B,MAEnD0B,EAAS,CAAE1B,KC3CU,gBD2CWM,QAASmC,EAAIC,KAAKC,SAGrDG,MAAM,SAAAC,GACLC,QAAQC,IAAIF,KAxB0B,wBAAAnB,EAAAsB,SAAAzB,MAAhB,gBAAA0B,GAAA,OAAA1C,EAAA2C,MAAAC,KAAAC,YAAA,II2DVC,YJ4CS,WACzB,MAAO,CAAEvD,KC7HiB,iBGgFGwD,SJjEP,SAAAC,GAAG,OAAI,SAAA/B,GAC7BA,EAAS,CAAE1B,KCfY,YDeKM,QAAS,CAAEmD,SACvCZ,WAAW,kBAAMnB,EAAS,CAAE1B,KCfF,kBDeyB,QI6DtCC,CAvEA,SAAAQ,GAOT,IAAAC,EAAAD,EANJN,QAAWE,EAMPK,EANOL,KAAMqD,EAMbhD,EANagD,OACjBC,EAKIlD,EALJkD,QACAC,EAIInD,EAJJmD,SACAzC,EAGIV,EAHJU,aACAoC,EAEI9C,EAFJ8C,YACAC,EACI/C,EADJ+C,SACIK,EACoBC,mBAAS,IAD7BC,EAAA1C,OAAA2C,EAAA,EAAA3C,CAAAwC,EAAA,GACGzC,EADH2C,EAAA,GACSE,EADTF,EAAA,GAGJG,oBAAU,WACRP,EAAQQ,KAAK,uBAEZ,CAACT,IAkBJ,OACE/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMuD,SAlBO,SAAAC,GACfA,EAAEC,iBACW,KAATlD,EAKFoC,EAHW,OAATnD,EACI,yBACA,qKAGNc,EAAaC,EAAMf,GACnB4D,EAAQ,MAQkBnD,UAAU,QAClCH,EAAAC,EAAAC,cAAA,SACEb,KAAK,OACLuE,KAAK,OACLC,MAAOpD,EACPqD,YACW,OAATpE,EACI,qBACA,6NAENqE,SAdS,SAAAL,GAAC,OAAIJ,EAAQI,EAAEM,OAAOH,UAgBjC7D,EAAAC,EAAAC,cAAA,SACEb,KAAK,SACLwE,MAAgB,OAATnE,EAAgB,SAAW,iCAClCS,UAAU,4BAGb4C,EAAOd,OAAS,GAA2B,uBAAtBgB,EAASgB,UAC7BjE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BG,QAASsC,GAC7C,OAATlD,EAAgB,QAAU,wECjCtBwE,EAzBI,SAAApE,GAA8B,IAA3BqE,EAA2BrE,EAA3BqE,OAAQC,EAAmBtE,EAAnBsE,OAAQ1E,EAAWI,EAAXJ,KAC5B2E,EAAsBF,EAAtBE,GAAIC,EAAkBH,EAAlBG,KAAM9E,EAAY2E,EAAZ3E,QAChB+E,EAAOF,EAAKD,EACd,OACEpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAQwE,OAAQ/E,EAAMgF,MAAI,EAACC,OAAO,UAC/BJ,IAGLvE,EAAAC,EAAAC,cAAA,OACE0E,IAAKpF,EAAQ,GAAGqF,YAChBC,IAAG,qCAAAC,OAAuCvF,EAAQ,GAAGwF,KAAlD,WACHC,MAAO,CAAEC,MAAO,WAElBlF,EAAAC,EAAAC,cAAA,UAAKoE,EAAKa,KAAKC,UAAf,UCgDSC,EA/DC,SAAAvF,GAA0B,IAAvBwF,EAAuBxF,EAAvBwF,IAAK5F,EAAkBI,EAAlBJ,KAAMG,EAAYC,EAAZD,MACpB0F,EAA6DD,EAA7DC,GAAIC,EAAyDF,EAAzDE,SAAUC,EAA+CH,EAA/CG,SAAUC,EAAqCJ,EAArCI,SAAUC,EAA2BL,EAA3BK,IAAKC,EAAsBN,EAAtBM,KAAMC,EAAgBP,EAAhBO,GAAIrG,EAAY8F,EAAZ9F,QACzD,OACEQ,EAAAC,EAAAC,cAAC4F,EAAA,SAAD,KACE9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAQwE,OAAQ/E,EAAMgF,MAAI,EAACC,OAAO,SAC/BY,IAGLvF,EAAAC,EAAAC,cAAA,OACE0E,IAAKpF,EAAQqF,YACbC,IAAG,8CAAAC,OAAgDvF,EAAQwF,KAAxD,QACHC,MAAO,CAAEC,MAAO,UAElBlF,EAAAC,EAAAC,cAAA,UACGsF,EAASJ,UADZ,QACyBK,EAASL,UADlC,QAGApF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACZwF,EAFH,KAIA3F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACZ0F,EAFH,OAMJ7F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACZuF,EAASN,QAAQ,GACR,OAAT1F,EACa,WAAVG,EACE,MACA,MACQ,WAAVA,EACA,WACA,iBAENG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBACZyF,EAAKR,UACI,OAAT1F,EAAgB,KAAO,uCCtCzBqG,EAVC,kBACd/F,EAAAC,EAAAC,cAAC4F,EAAA,SAAD,KACE9F,EAAAC,EAAAC,cAAA,OACE4E,IAAKkB,IACLpB,IAAI,aACJK,MAAO,CAAEC,MAAO,OAAQe,OAAQ,OAAQC,QAAS,aC2KxC5G,cAJS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,UAKf,CAAE2G,WR5HsB,SAACC,EAAOvG,GAAR,sBAAAwG,EAAA3F,OAAAC,EAAA,EAAAD,CAAAE,EAAAX,EAAAY,KAAkB,SAAAyF,EAAMvF,GAAN,IAAAwF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvC,EAAAC,EAAAuC,EAAArH,EAAAsH,EAAA3B,EAAA4B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxF,EAAAyF,EAAA,OAAA3G,EAAAX,EAAAe,KAAA,SAAAwG,GAAA,cAAAA,EAAAtG,KAAAsG,EAAArG,MAAA,cAC1C/B,IACQmH,EAA8BH,EAA9BG,KAAMC,EAAwBJ,EAAxBI,SAAUC,EAAcL,EAAdK,UAFkBe,EAAArG,KAAA,EAItBsG,IAAMpG,IAAN,uDAAA0D,OACqCyB,EADrC,SAAAzB,OACqD0B,EADrD,WAAA1B,OACwElF,EADxE,WAAAkF,OACuFnD,qCALjE,cAIpC8E,EAJoCc,EAAAE,KAAAf,EAOSD,EAAM1E,KAAjD4E,EAPkCD,EAOlCC,SAAUvC,EAPwBsC,EAOxBtC,GAAIC,EAPoBqC,EAOpBrC,KAAMuC,EAPcF,EAOdE,KAAMrH,EAPQmH,EAORnH,QAASsH,EAPDH,EAOCG,IACvC3B,EAA6Bb,EAA7Ba,KAAM4B,EAAuBzC,EAAvByC,SAAUC,EAAa1C,EAAb0C,SAChBC,EAAoBH,EAApBG,QAASC,EAAWJ,EAAXI,OAekB,QAdzBC,EAAU,CACdvD,KAAM2C,EACNK,WACAvC,KACAc,OACA0B,KAAMA,EAAKc,MACXZ,WACAC,WACAxH,QAASA,EAAQ,GAAG8E,KACpBsD,IAAKpI,EAAQ,GAAGqF,YAChBG,KAAMxF,EAAQ,GAAGwF,KACjBiC,UACAC,WAEU/B,KAAKC,YAAoB+B,EAAQhC,KAAO,GACpDpE,EAAS,CAAE1B,KC7EsB,sBD6EKM,QAASwH,IAzBLK,EAAArG,KAAA,GA2BvBsG,IAAMpG,IAAN,wDAAA0D,OACuCyB,EADvC,SAAAzB,OACuD0B,EADvD,WAAA1B,OAC0ElF,EAD1E,WAAAkF,OACyFnD,qCA5BlE,eA2BpCwF,EA3BoCI,EAAAE,MA8BpCL,EAAQD,EAAKpF,KAAK6F,KAAKC,MAAM,EAAG,KAChCC,IAAN,eAAAC,EAAAtH,OAAAC,EAAA,EAAAD,CAAAE,EAAAX,EAAAY,KAAU,SAAAoH,EAAM9D,GAAN,OAAAvD,EAAAX,EAAAe,KAAA,SAAAkH,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,OAC2B,OAA/BgD,EAAOG,KAAKa,KAAKC,YAAoBjB,EAAOG,KAAKa,KAAO,GAExD8B,EAAU,MAAQ9C,EAAOE,IAAMF,EAAOE,GAAK6C,EAAS,MACtD/C,EAAO3E,QAAQ,GAAGwF,KAAOb,EAAO3E,QAAQ,GAAGwF,KAAK8C,MAAM,GAAI,GAAK,IACtDZ,EAAS/C,EAAOE,IAAMF,EAAOE,GAAK4C,EAAU,MACrD9C,EAAO3E,QAAQ,GAAGwF,KAAOb,EAAO3E,QAAQ,GAAGwF,KAAK8C,MAAM,GAAI,GAAK,IACtDb,EAAU9C,EAAOE,IAAMF,EAAOE,GAAK6C,EAC5C/C,EAAO3E,QAAQ,GAAGwF,KAAOb,EAAO3E,QAAQ,GAAGwF,KAAK8C,MAAM,GAAI,GAAK,IACtDZ,EAAS,MAAQ/C,EAAOE,IAAMF,EAAOE,GAAK4C,IACnD9C,EAAO3E,QAAQ,GAAGwF,KAAOb,EAAO3E,QAAQ,GAAGwF,KAAK8C,MAAM,GAAI,GAAK,KAVzD,wBAAAI,EAAA3F,SAAA0F,MAAV,gBAAAE,GAAA,OAAAH,EAAAvF,MAAAC,KAAAC,YAAA,IAaA5B,EAAS,CAAE1B,KC/FoB,oBD+FKM,QAAS0H,IAEvCC,EAAe,WAAVzH,EAAqB,IAAM,IA9CI2H,EAAArG,KAAA,GA+CxBsG,IAAMpG,IAAN,qDAAA0D,OACqCyB,EADrC,SAAAzB,OACqD0B,EADrD,WAAA1B,OACwEuC,EADxE,SAAAvC,OACkFnD,qCAhD1D,QA+CpCE,EA/CoC0F,EAAAE,MAkDpCH,EAAazF,EAAIE,KAAKA,KAAK8F,MAAM,EAAG,KAC/BC,IAAX,eAAAK,EAAA1H,OAAAC,EAAA,EAAAD,CAAAE,EAAAX,EAAAY,KAAe,SAAAwH,EAAM/C,GAAN,OAAA1E,EAAAX,EAAAe,KAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,OACkB,OAA3BmE,EAAIE,SAASJ,YAAoBE,EAAIE,SAAW,GACrB,OAA3BF,EAAIG,SAASL,YAAoBE,EAAIG,SAAW,GAFvC,wBAAA6C,EAAA/F,SAAA8F,MAAf,gBAAAE,GAAA,OAAAH,EAAA3F,MAAAC,KAAAC,YAAA,IAIA5B,EAAS,CAAE1B,KCzGe,eDyGKM,QAAS4H,IAvDE,yBAAAC,EAAAjF,SAAA+D,MAAlB,gBAAAkC,GAAA,OAAAnC,EAAA5D,MAAAC,KAAAC,YAAA,KQ0HXrD,CAzKE,SAAAQ,GAGX,IAAAC,EAAAD,EAFJN,QAAW2H,EAEPpH,EAFOoH,QAASsB,EAEhB1I,EAFgB0I,cAAelB,EAE/BxH,EAF+BwH,WAAYmB,EAE3C3I,EAF2C2I,QAAS7I,EAEpDE,EAFoDF,MAAOH,EAE3DK,EAF2DL,KAAM0G,EAEjErG,EAFiEqG,MACrED,EACIrG,EADJqG,WACIjD,EACkBC,mBAAS,IAD3BC,EAAA1C,OAAA2C,EAAA,EAAA3C,CAAAwC,EAAA,GACGyF,EADHvF,EAAA,GACQwF,EADRxF,EAAA,GAAAyF,EAEwB1F,mBAAS,IAFjC2F,EAAApI,OAAA2C,EAAA,EAAA3C,CAAAmI,EAAA,GAEG7E,EAFH8E,EAAA,GAEWC,EAFXD,EAAA,GAIJvF,oBAAU,WACK,OAAT7D,GACFkJ,EAAO,mBACPG,EAAU,YAEVH,EAAO,uFACPG,EAAU,YAGX,IAEHxF,oBAAU,WACRyF,KAEC,CAACtJ,EAAMsE,IAEVT,oBAAU,WACR4C,EAAWC,EAAOvG,IAEjB,CAACA,IAEJ,IAQMmJ,EAAe,WAGbJ,EAFK,WAAX5E,EACa,OAATtE,EACS,kBACA,sFACA,OAATA,EACO,iBACA,8FAITkE,EAUEuD,EAVFvD,KACAgD,EASEO,EATFP,SACAvC,EAQE8C,EARF9C,GACA7E,EAOE2H,EAPF3H,QACAoI,EAMET,EANFS,IACAf,EAKEM,EALFN,KACA1B,EAIEgC,EAJFhC,KACA4B,EAGEI,EAHFJ,SACAC,EAEEG,EAFFH,SACAhC,EACEmC,EADFnC,KAEFZ,EAA0C,IAAjC,IAAI6E,MAAOC,oBAA2BtC,EAC/CrC,EAAOF,EAAKD,EACd,OAAIsE,GAAiC,IAAtBnB,EAAWtF,OACjBjC,EAAAC,EAAAC,cAACiJ,EAAD,MAGLnJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAC4F,EAAA,SAAD,KACE9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OACE0E,IAAKgD,EACL9C,IAAG,qCAAAC,OAAuCC,EAAvC,WACHC,MAAO,CAAEC,MAAO,YAGpBlF,EAAAC,EAAAC,cAAA,OAAK+E,MAAO,CAAEgB,OAAQ,WACpBjG,EAAAC,EAAAC,cAAA,UAAKiF,EAAKC,UAAV,QACApF,EAAAC,EAAAC,cAAA,UACGqH,EAAW,GAAG/B,SAASJ,UAD1B,QAEGmC,EAAW,GAAG9B,SAASL,UAF1B,QAIApF,EAAAC,EAAAC,cAAA,UAAK0D,GACL5D,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAQwE,OAAQ/E,EAAMgF,MAAI,EAACC,OAAO,MAC/BJ,MAKTvE,EAAAC,EAAAC,cAAA,OAAK+E,MAAO,CAAEgB,OAAQ,WACpBjG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAc,OAATR,EAAgBF,EAAU,2FAEjCQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAkB,IACrB,OAATT,EAAgB,aAAe,2DAC/BsH,EAHH,KAKAhH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAiB,IACpB,OAATT,EAAgB,SAAW,mCAC3BmH,EAAKzB,QAAQ,GAAI,IACR,OAAT1F,EACa,WAAVG,EACE,MACA,MACQ,WAAVA,EACA,WACA,iBAENG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAmB,IACtB,OAATT,EAAgB,aAAe,qDAC/BqH,EAAS3B,UAHZ,IAGiC,OAAT1F,EAAgB,OAAS,6BAGnDM,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAE,sBAAA0E,OAAwBf,EAAxB,KAAAe,OAAkCnB,GACpCzD,UAAU,2BACVG,QAAS,kBA5FF,SAAA0D,GAEjB+E,EADa,WAAX/E,EACQ,UAEA,UAwFeoF,CAAapF,KAE3B2E,KAIP3I,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,mCACLC,OAAQ,SAAAC,GAAK,OACXzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZsI,EAAcV,IAAI,SAAA5D,GAAM,OACvBnE,EAAAC,EAAAC,cAACwJ,EAAD,CACEC,IAAKxF,EAAOE,GACZF,OAAQA,EACRC,OAAQA,EACR1E,KAAMA,UAMhBM,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,kCACLC,OAAQ,SAAAC,GAAK,OACXzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZoH,EAAWQ,IAAI,SAAAzC,GAAG,OACjBtF,EAAAC,EAAAC,cAAC0J,EAAD,CAASD,IAAKrE,EAAIC,GAAID,IAAKA,EAAK5F,KAAMA,EAAMG,MAAOA,eChGxDP,cAJS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,UAKf,CAAEqK,YTbuB,SAAAzD,GACzB,MAAO,CAAE/G,KCpDiB,eDoDGM,QAASyG,KSUzB9G,CAxDG,SAAAQ,GAAgD,IAAlCD,EAAkCC,EAA7CN,QAAWK,MAASgK,EAAyB/J,EAAzB+J,YAAazD,EAAYtG,EAAZsG,MAAYlD,EACxCC,mBAAS,IAD+BC,EAAA1C,OAAA2C,EAAA,EAAA3C,CAAAwC,EAAA,GACzDiC,EADyD/B,EAAA,GACnD0G,EADmD1G,EAAA,GAAAyF,EAE1C1F,mBAAS,IAFiC2F,EAAApI,OAAA2C,EAAA,EAAA3C,CAAAmI,EAAA,GAEzDjB,EAFyDkB,EAAA,GAEpDiB,EAFoDjB,EAAA,GAAAkB,EAGxC7G,mBAAS,IAH+B8G,EAAAvJ,OAAA2C,EAAA,EAAA3C,CAAAsJ,EAAA,GAGzDhF,EAHyDiF,EAAA,GAGnDC,EAHmDD,EAAA,GAKhE1G,oBAAU,WACR4G,KAEC,CAACtK,IAEJ,IAAMsK,EAAe,eAAA9D,EAAA3F,OAAAC,EAAA,EAAAD,CAAAE,EAAAX,EAAAY,KAAG,SAAAC,IAAA,IAAA0F,EAAAC,EAAA3E,EAAAsI,EAAA9F,EAAA9E,EAAA,OAAAoB,EAAAX,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdqF,EAAwBJ,EAAxBI,SAAUC,EAAcL,EAAdK,UADIxF,EAAAE,KAAA,EAEJsG,IAAMpG,IAAN,uDAAA0D,OACuCyB,EADvC,SAAAzB,OACuD0B,EADvD,WAAA1B,OAC0ElF,EAD1E,WAAAkF,OACyFnD,qCAHrF,OAEhBE,EAFgBb,EAAAyG,KAAA0C,EAKItI,EAAIE,KAAtBsC,EALc8F,EAKd9F,KAAM9E,EALQ4K,EAKR5K,QACc,OAAxB8E,EAAKa,KAAKC,YAAoBd,EAAKa,KAAO,GAC9C2E,EAAQxF,EAAKa,KAAKC,WAClB2E,EAAOvK,EAAQ,GAAGqF,aAClBqF,EAAQ1K,EAAQ,GAAGwF,MATG,wBAAA/D,EAAAsB,SAAAzB,MAAH,yBAAAuF,EAAA5D,MAAAC,KAAAC,YAAA,GAYb4D,EAA8BH,EAA9BG,KAAM8D,EAAwBjE,EAAxBiE,WAAYC,EAAYlE,EAAZkE,QAC1B,OACEtK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAE,8BAAA0E,OAAgCwB,GAClCjG,QAAS,kBAAMuJ,EAAYzD,KAE3BpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAKiF,EAAL,QACAnF,EAAAC,EAAAC,cAAA,OACE0E,IAAKgD,EACL9C,IAAG,qCAAAC,OAAuCC,EAAvC,WACHC,MAAO,CAAEC,MAAO,WAElBlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACGqG,EADH,KACW8D,GAEXrK,EAAAC,EAAAC,cAAA,UAAKoK,QCnBAhL,cAJS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,UAKf,KAFaF,CArBA,SAAAQ,GAAsC,IAAAC,EAAAD,EAAnCN,QAAWuD,EAAwBhD,EAAxBgD,OAC3B,OADmDhD,EAAhB2I,QAE1B1I,EAAAC,EAAAC,cAACiJ,EAAD,MAGLnJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZ4C,EAAOgF,IAAI,SAAA3B,GAAK,OACfpG,EAAAC,EAAAC,cAACqK,EAAD,CAAWZ,IAAKvD,EAAMoE,GAAIpE,MAAOA,SC8B5B9G,cAJS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,UAGFF,CAvCD,SAAAQ,GACZ,MAAgB,OADuBA,EAAxBN,QAAWE,KAExBM,EAAAC,EAAAC,cAAC4F,EAAA,SAAD,KACE9F,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,yFAIAF,EAAAC,EAAAC,cAAA,sIAIAF,EAAAC,EAAAC,cAAA,oBACUF,EAAAC,EAAAC,cAAA,KAAGuK,KAAK,+BAAR,yBADV,MAKFzK,EAAAC,EAAAC,cAAC4F,EAAA,SAAD,KACE9F,EAAAC,EAAAC,cAAA,iFACAF,EAAAC,EAAAC,cAAA,4SACAF,EAAAC,EAAAC,cAAA,ikBAIAF,EAAAC,EAAAC,cAAA,iDACSF,EAAAC,EAAAC,cAAA,KAAGuK,KAAK,+BAAR,2GADT,QCFSnL,cAJS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,UAGFF,CAtBE,SAAAQ,GACf,MAAgB,OAD0BA,EAAxBN,QAAWE,KAE3BM,EAAAC,EAAAC,cAAC4F,EAAA,SAAD,KACE9F,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,mDAGFH,EAAAC,EAAAC,cAAC4F,EAAA,SAAD,KACE9F,EAAAC,EAAAC,cAAA,sHACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,oQCCAuK,EAAe,CACnB7K,MAAO,SACPH,KAAM,KACNgJ,SAAS,EACTnI,MAAO,KACPwC,OAAQ,GACRqD,MAAO,KACPe,QAAS,GACTsB,cAAe,GACflB,WAAY,ICpBCoD,4BAAgB,CAC7BnL,QDsBa,WAAkC,IAAjCD,EAAiCoD,UAAAV,OAAA,QAAA2I,IAAAjI,UAAA,GAAAA,UAAA,GAAzB+H,EAAcG,EAAWlI,UAAAV,OAAA,EAAAU,UAAA,QAAAiI,EAC/C,OAAQC,EAAOxL,MACb,IZ5ByB,gBY6BvB,OAAOqB,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEEwD,OAAQ8H,EAAOlL,QACf+I,SAAS,IAEb,IZhCwB,eYiCtB,OAAOhI,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEEwD,OAAQ,KAEZ,IZtCwB,eYuCtB,OAAOrC,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEE6G,MAAOyE,EAAOlL,UAElB,IZvC+B,sBYwC7B,OAAOe,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEE4H,QAAS0D,EAAOlL,UAEpB,IZ3C6B,oBY4C3B,OAAOe,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEEkJ,cAAeoC,EAAOlL,UAE1B,IZ/CwB,eYgDtB,OAAOe,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEEgI,WAAYsD,EAAOlL,QACnB+I,SAAS,IAEb,IZpDuB,cYqDrB,OAAOhI,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEEG,KAAyB,OAAnBmL,EAAOlL,QAAmB,KAAO,OAE3C,IZxDwB,eYyDtB,OAAOe,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEEM,MAA0B,WAAnBgL,EAAOlL,QAAuB,WAAa,WAEtD,IZnEqB,YYoEnB,OAAOe,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEEgB,MAAOsK,EAAOlL,UAElB,IZvEwB,eYwEtB,OAAOe,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEEgB,MAAO,KACPmI,SAAS,IAEb,IZvEuB,cYwErB,OAAOhI,OAAAoK,EAAA,EAAApK,CAAA,GACFnB,EADL,CAEEmJ,SAAS,IAEb,QACE,OAAOnJ,MEhFPwL,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe5I,WAAf,EAAmBsI,KC2B1BO,EA1BH,WACV,OACEtL,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAUN,MAAOA,GACfjL,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsL,EAAD,MACAxL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACuL,EAAD,MACAzL,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAOE,KAAK,qBAAqBmC,UAAWC,IAC5C3L,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBmC,UAAWE,IAClD5L,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,mCACLmC,UAAWG,IAEb7L,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2BAA2BmC,UAAWI,IACxD9L,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAOqC,UAAWK,gBCzBhCC,IAASxC,OAAOxJ,EAAAC,EAAAC,cAAC+L,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ed7d9b45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.706c7930.gif\";","import request from 'superagent';\r\nimport axios from 'axios';\r\nimport {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from './types';\r\n\r\n//Set alert\r\nexport const setAlert = msg => dispatch => {\r\n  dispatch({ type: SET_ALERT, payload: { msg } });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n};\r\n\r\n//Search places to get weather for\r\nexport const searchPlaces = (text, lang) => async dispatch => {\r\n  setLoading();\r\n  request\r\n    .get('https://wft-geo-db.p.rapidapi.com/v1/geo/cities')\r\n    .query({ limit: '10' })\r\n    .query({ namePrefix: text })\r\n    .query({ sort: '-population' })\r\n    .query({ languageCode: lang })\r\n    .set('x-rapidapi-host', 'wft-geo-db.p.rapidapi.com')\r\n    .set('x-rapidapi-key', process.env.REACT_APP_RAPIDAPI_KEY)\r\n    .set('Accept', 'application/json')\r\n    .then(res => {\r\n      if (res.body.data.length === 0) {\r\n        const alert =\r\n          lang === 'en'\r\n            ? 'No cities found. Check the spelling and try again'\r\n            : 'Ничего не найдено. Проверьте правильность написания и попробуйте снова';\r\n        dispatch({ type: SET_ALERT, payload: alert });\r\n        setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\r\n      } else {\r\n        dispatch({ type: SEARCH_PLACES, payload: res.body.data });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//Select place in search and get weather for it\r\nexport const selectPlace = place => {\r\n  return { type: SELECT_PLACE, payload: place };\r\n};\r\n\r\n//Get current weather and 48-hr/15-day forecast\r\nexport const getWeather = (place, units) => async dispatch => {\r\n  setLoading();\r\n  const { city, latitude, longitude } = place;\r\n  //Get current weather\r\n  const respo = await axios.get(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n  );\r\n  const { timezone, dt, main, wind, weather, sys } = respo.data,\r\n    { temp, pressure, humidity } = main,\r\n    { sunrise, sunset } = sys;\r\n  const current = {\r\n    name: city,\r\n    timezone,\r\n    dt,\r\n    temp,\r\n    wind: wind.speed,\r\n    pressure,\r\n    humidity,\r\n    weather: weather[0].main,\r\n    sky: weather[0].description,\r\n    icon: weather[0].icon,\r\n    sunrise,\r\n    sunset\r\n  };\r\n  if (current.temp.toFixed() === '-0') current.temp = 0;\r\n  dispatch({ type: GET_CURRENT_WEATHER, payload: current });\r\n  //Get forecast for 48 hours\r\n  const resp = await axios.get(\r\n    `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\r\n  );\r\n  const today = resp.data.list.slice(0, 15);\r\n  today.map(async period => {\r\n    if (period.main.temp.toFixed() === '-0') period.main.temp = 0;\r\n    //Change icons according to local time in requested place\r\n    if (sunrise + 86400 < period.dt && period.dt < sunset + 86400) {\r\n      period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n    } else if (sunset < period.dt && period.dt < sunrise + 86400) {\r\n      period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n    } else if (sunrise < period.dt && period.dt < sunset) {\r\n      period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'd';\r\n    } else if (sunset - 86400 < period.dt && period.dt < sunrise) {\r\n      period.weather[0].icon = period.weather[0].icon.slice(0, -1) + 'n';\r\n    }\r\n  });\r\n  dispatch({ type: GET_TODAY_WEATHER, payload: today });\r\n  //Get forecast for 15 days\r\n  const un = units === 'metric' ? 'M' : 'I';\r\n  const res = await axios.get(\r\n    `https://api.weatherbit.io/v2.0/forecast/daily?lat=${latitude}&lon=${longitude}&units=${un}&key=${process.env.REACT_APP_WEATHERBIT_KEY}`\r\n  );\r\n  const forecast15 = res.data.data.slice(1, 16);\r\n  forecast15.map(async day => {\r\n    if (day.max_temp.toFixed() === '-0') day.max_temp = 0;\r\n    if (day.min_temp.toFixed() === '-0') day.min_temp = 0;\r\n  });\r\n  dispatch({ type: GET_FORECAST, payload: forecast15 });\r\n};\r\n\r\n//Switch language\r\nexport const switchLang = lang => {\r\n  return { type: SWITCH_LANG, payload: lang };\r\n};\r\n\r\n// Switch units\r\nexport const switchUnits = units => {\r\n  return { type: SWITCH_UNITS, payload: units };\r\n};\r\n\r\n//Clear search\r\nexport const clearSearch = () => {\r\n  return { type: CLEAR_SEARCH };\r\n};\r\n\r\n//Set loading\r\nexport const setLoading = () => {\r\n  return { type: SET_LOADING };\r\n};\r\n","export const SEARCH_PLACES = 'SEARCH_PLACES';\nexport const SELECT_PLACE = 'SELECT_PLACE';\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const GET_CURRENT_WEATHER = 'GET_CURRENT_WEATHER';\nexport const GET_TODAY_WEATHER = 'GET_TODAY_WEATHER';\nexport const GET_FORECAST = 'GET_FORECAST';\nexport const SWITCH_LANG = 'SWITCH_LANG';\nexport const SWITCH_UNITS = 'SWITCH_UNITS';\nexport const SET_LOADING = 'SET_LOADING';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { switchLang, switchUnits } from '../../actions/weatherActions';\n\nconst Navbar = ({ weather: { units, lang }, switchLang, switchUnits }) => {\n  return (\n    <nav className='navbar bg-primary'>\n      <h1>\n        <i className='fas fa-cloud-sun-rain' /> Weather app\n      </h1>\n      <ul>\n        <li>\n          <Link to='/weather-app-redux'>\n            {lang === 'en' ? 'Search' : 'Поиск'}\n          </Link>\n        </li>\n        <li>\n          <Link to='/weather-app-redux/about'>\n            {lang === 'en' ? 'About' : 'Инфо'}\n          </Link>\n        </li>\n        <li>\n          <div className='switch'>\n            <div className='select'>\n              {units === 'metric' ? '°C' : '°F'}\n              <i className='fa fa-angle-down' />\n            </div>\n            <ul className='select-drop'>\n              <li onClick={() => switchUnits(units)}>\n                {units === 'metric' ? '°F' : '°C'}\n              </li>\n            </ul>\n          </div>\n        </li>\n        <li>\n          <div className='switch'>\n            <div className='select'>\n              {lang === 'en' ? 'EN' : 'RU'}\n              <i className='fa fa-angle-down' />\n            </div>\n            <ul className='select-drop'>\n              <li onClick={() => switchLang(lang)}>\n                {lang === 'en' ? 'RU' : 'EN'}\n              </li>\n            </ul>\n          </div>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  weather: PropTypes.object.isRequired,\n  switchLang: PropTypes.func.isRequired,\n  switchUnits: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(\n  mapStateToProps,\n  { switchLang, switchUnits }\n)(Navbar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ weather: { alert } }) => {\n  return (\n    alert !== null && (\n      <div className={`alert alert-dark text-center`}>\n        <i className='fas fa-info-circle' /> {alert}\n      </div>\n    )\n  );\n};\n\nAlert.propTypes = {\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  searchPlaces,\n  clearSearch,\n  setAlert\n} from '../../actions/weatherActions';\n\nconst Search = ({\n  weather: { lang, places },\n  history,\n  location,\n  searchPlaces,\n  clearSearch,\n  setAlert\n}) => {\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    history.push('/weather-app-redux');\n    //eslint-disable-next-line\n  }, [places]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (text === '') {\n      const alert =\n        lang === 'en'\n          ? 'Please enter something'\n          : 'Пожалуйста, введите что-нибудь';\n      setAlert(alert);\n    } else {\n      searchPlaces(text, lang);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className='form'>\n        <input\n          type='text'\n          name='text'\n          value={text}\n          placeholder={\n            lang === 'en'\n              ? 'Enter City Name...'\n              : 'Введите название города на русском языке...'\n          }\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value={lang === 'en' ? 'Search' : 'Поиск'}\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {places.length > 0 && location.pathname === '/weather-app-redux' && (\n        <button className='btn btn-grey btn-block my-1' onClick={clearSearch}>\n          {lang === 'en' ? 'Clear' : 'Очистить'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  weather: PropTypes.object.isRequired,\n  searchPlaces: PropTypes.func.isRequired,\n  clearSearch: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(\n  mapStateToProps,\n  { searchPlaces, clearSearch, setAlert }\n)(Search);\n","import React from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\n\nconst PeriodItem = ({ period, offset, lang }) => {\n  const { dt, main, weather } = period,\n    time = dt + offset;\n  return (\n    <div className='weatheritem'>\n      <h3>\n        <Moment locale={lang} unix format='ddd LT'>\n          {time}\n        </Moment>\n      </h3>\n      <img\n        alt={weather[0].description}\n        src={`https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\n        style={{ width: '100px' }}\n      />\n      <h1>{main.temp.toFixed()}°</h1>\n    </div>\n  );\n};\n\nPeriodItem.propTypes = {\n  period: PropTypes.object.isRequired,\n  lang: PropTypes.string.isRequired\n};\n\nexport default PeriodItem;\n","import React, { Fragment } from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\n\nconst DayItem = ({ day, lang, units }) => {\n  const { ts, max_temp, min_temp, wind_spd, pop, pres, rh, weather } = day;\n  return (\n    <Fragment>\n      <div className='weatheritem'>\n        <h3>\n          <Moment locale={lang} unix format='dd Do'>\n            {ts}\n          </Moment>\n        </h3>\n        <img\n          alt={weather.description}\n          src={`https://www.weatherbit.io/static/img/icons/${weather.icon}.png`}\n          style={{ width: '70px' }}\n        />\n        <h2>\n          {max_temp.toFixed()}°/{min_temp.toFixed()}°\n        </h2>\n        <div className='conditions'>\n          <div>\n            <ul>\n              <li>\n                <i className='fas fa-umbrella' />\n                {pop}%\n              </li>\n              <li>\n                <i className='fas fa-water' />\n                {rh}%\n              </li>\n            </ul>\n          </div>\n          <div>\n            <ul>\n              <li>\n                <i className='fas fa-wind' />\n                {wind_spd.toFixed(1)}\n                {lang === 'en'\n                  ? units === 'metric'\n                    ? 'm/s'\n                    : 'mph'\n                  : units === 'metric'\n                  ? 'м/c'\n                  : 'м/ч'}\n              </li>\n              <li>\n                <i className='fas fa-square' />\n                {pres.toFixed()}\n                {lang === 'en' ? 'mb' : 'мб'}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nDayItem.propTypes = {\n  day: PropTypes.object.isRequired,\n  lang: PropTypes.string.isRequired,\n  units: PropTypes.string.isRequired\n};\n\nexport default DayItem;\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () => (\n  <Fragment>\n    <img\n      src={spinner}\n      alt='Loading...'\n      style={{ width: '64px', margin: 'auto', display: 'block' }}\n    />\n  </Fragment>\n);\n\nexport default Spinner;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PeriodItem from './PeriodItem';\nimport DayItem from './DayItem';\nimport Spinner from '../layout/Spinner';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { getWeather } from '../../actions/weatherActions';\n\nconst Forecast = ({\n  weather: { current, forecastToday, forecast15, loading, units, lang, place },\n  getWeather\n}) => {\n  const [btn, setBtn] = useState('');\n  const [target, setTarget] = useState('');\n\n  useEffect(() => {\n    if (lang === 'en') {\n      setBtn('15-day forecast');\n      setTarget('15-day');\n    } else {\n      setBtn('Прогноз на 15 дней');\n      setTarget('15-day');\n    }\n    //eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    switchButton();\n    //eslint-disable-next-line\n  }, [lang, target]);\n\n  useEffect(() => {\n    getWeather(place, units);\n    //eslint-disable-next-line\n  }, [units]);\n\n  const switchTarget = target => {\n    if (target === '15-day') {\n      setTarget('current');\n    } else {\n      setTarget('15-day');\n    }\n  };\n\n  const switchButton = () => {\n    target === '15-day'\n      ? lang === 'en'\n        ? setBtn('15-day forecast')\n        : setBtn('Прогноз на 15 дней')\n      : lang === 'en'\n      ? setBtn('48-hr forecast')\n      : setBtn('Прогноз на 48 часов');\n  };\n\n  const {\n      name,\n      timezone,\n      dt,\n      weather,\n      sky,\n      wind,\n      temp,\n      pressure,\n      humidity,\n      icon\n    } = current,\n    offset = new Date().getTimezoneOffset() * 60 + timezone,\n    time = dt + offset;\n  if (loading || forecast15.length === 0) {\n    return <Spinner />;\n  } else\n    return (\n      <Router>\n        <Fragment>\n          <div className='card grid-2'>\n            <div className='card grid-2'>\n              <div className='all-center'>\n                <img\n                  alt={sky}\n                  src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\n                  style={{ width: '150px' }}\n                />\n              </div>\n              <div style={{ margin: 'auto 0' }}>\n                <h1>{temp.toFixed()}°</h1>\n                <h3>\n                  {forecast15[0].max_temp.toFixed()}°/\n                  {forecast15[0].min_temp.toFixed()}°\n                </h3>\n                <h2>{name}</h2>\n                <h4>\n                  <Moment locale={lang} unix format='LT'>\n                    {time}\n                  </Moment>\n                </h4>\n              </div>\n            </div>\n            <div style={{ margin: 'auto 0' }}>\n              <ul>\n                <li>\n                  <h3>{lang === 'en' ? weather : 'Текущие условия:'}</h3>\n                </li>\n                <li>\n                  <i className='fas fa-water' />{' '}\n                  {lang === 'en' ? 'Humidity: ' : 'Влажность: '}\n                  {humidity}%\n                </li>\n                <li>\n                  <i className='fas fa-wind' />{' '}\n                  {lang === 'en' ? 'Wind: ' : 'Ветер: '}\n                  {wind.toFixed(1)}{' '}\n                  {lang === 'en'\n                    ? units === 'metric'\n                      ? 'm/s'\n                      : 'mph'\n                    : units === 'metric'\n                    ? 'м/c'\n                    : 'м/ч'}\n                </li>\n                <li>\n                  <i className='fas fa-square' />{' '}\n                  {lang === 'en' ? 'Pressure: ' : 'Давление: '}\n                  {pressure.toFixed()} {lang === 'en' ? 'mbar' : 'мбар'}\n                </li>\n              </ul>\n              <Link\n                to={`/weather-app-redux/${target}/${name}`}\n                className='btn btn-dark btn-sm my-1'\n                onClick={() => switchTarget(target)}\n              >\n                {btn}\n              </Link>\n            </div>\n          </div>\n          <Switch>\n            <Route\n              exact\n              path='/weather-app-redux/current/:name'\n              render={props => (\n                <div className='listitems'>\n                  {forecastToday.map(period => (\n                    <PeriodItem\n                      key={period.dt}\n                      period={period}\n                      offset={offset}\n                      lang={lang}\n                    />\n                  ))}\n                </div>\n              )}\n            />\n            <Route\n              exact\n              path='/weather-app-redux/15-day/:name'\n              render={props => (\n                <div className='listitems'>\n                  {forecast15.map(day => (\n                    <DayItem key={day.ts} day={day} lang={lang} units={units} />\n                  ))}\n                </div>\n              )}\n            />\n          </Switch>\n        </Fragment>\n      </Router>\n    );\n};\n\nForecast.propTypes = {\n  weather: PropTypes.object.isRequired,\n  getWeather: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(\n  mapStateToProps,\n  { getWeather }\n)(Forecast);\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { selectPlace } from '../../actions/weatherActions';\n\nconst PlaceItem = ({ weather: { units }, selectPlace, place }) => {\n  const [temp, setTemp] = useState('');\n  const [sky, setSky] = useState('');\n  const [icon, setIcon] = useState('');\n\n  useEffect(() => {\n    getPlaceWeather();\n    //eslint-disable-next-line\n  }, [units]);\n\n  const getPlaceWeather = async () => {\n    const { latitude, longitude } = place;\n    const res = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&APPID=${process.env.REACT_APP_OPENWEATHER_KEY}`\n    );\n    const { main, weather } = res.data;\n    if (main.temp.toFixed() === '-0') main.temp = 0;\n    setTemp(main.temp.toFixed());\n    setSky(weather[0].description);\n    setIcon(weather[0].icon);\n  };\n\n  const { city, regionCode, country } = place;\n  return (\n    <Link\n      to={`/weather-app-redux/current/${city}`}\n      onClick={() => selectPlace(place)}\n    >\n      <div className='placeitem'>\n        <h1>{temp}°</h1>\n        <img\n          alt={sky}\n          src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\n          style={{ width: '100px' }}\n        />\n        <div className='all-center'>\n          <h3>\n            {city}, {regionCode}\n          </h3>\n          <h4>{country}</h4>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nPlaceItem.propTypes = {\n  place: PropTypes.object.isRequired,\n  weather: PropTypes.object.isRequired,\n  selectPlace: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(\n  mapStateToProps,\n  { selectPlace }\n)(PlaceItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PlaceItem from './PlaceItem';\nimport Spinner from '../layout/Spinner';\n\nconst Places = ({ weather: { places, loading } }) => {\n  if (loading) {\n    return <Spinner />;\n  } else\n    return (\n      <div className='listitems'>\n        {places.map(place => (\n          <PlaceItem key={place.id} place={place} />\n        ))}\n      </div>\n    );\n};\n\nPlaces.propTypes = {\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Places);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst About = ({ weather: { lang } }) => {\n  return lang === 'en' ? (\n    <Fragment>\n      <h2>About this app</h2>\n      <p>\n        An application for finding weather in more than 134,000 cities in the\n        world.\n      </p>\n      <p>\n        Provides information on current weather, as well as a detailed forecast\n        for the next 48 hours and a forecast for 15 days.\n      </p>\n      <p>\n        Made by <a href='https://github.com/yalalex/'>Aliaksandr Yalouskikh</a>.\n      </p>\n    </Fragment>\n  ) : (\n    <Fragment>\n      <h2>О приложении</h2>\n      <p>Приложение для поиска погоды в более чем 134 000 городах мира.</p>\n      <p>\n        Предоставляет информацию по текущей погоде, а так же подробный прогноз\n        на ближайшие 48 часов и прогноз на 15 дней.\n      </p>\n      <p>\n        Сделал <a href='https://github.com/yalalex/'>Александр Еловских</a>.\n      </p>\n    </Fragment>\n  );\n};\n\nAbout.propTypes = {\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(mapStateToProps)(About);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst NotFound = ({ weather: { lang } }) => {\n  return lang === 'en' ? (\n    <Fragment>\n      <h2>Not Found</h2>\n      <p className='lead'>The page you are looking for does not exist...</p>\n    </Fragment>\n  ) : (\n    <Fragment>\n      <h2>Страница не найдена</h2>\n      <p className='lead'>Страница, которую вы ищете, не существует...</p>\n    </Fragment>\n  );\n};\n\nNotFound.propTypes = {\n  weather: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  weather: state.weather\n});\n\nexport default connect(mapStateToProps)(NotFound);\n","import {\r\n  SEARCH_PLACES,\r\n  SELECT_PLACE,\r\n  CLEAR_SEARCH,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  GET_CURRENT_WEATHER,\r\n  GET_TODAY_WEATHER,\r\n  GET_FORECAST,\r\n  SWITCH_LANG,\r\n  SWITCH_UNITS,\r\n  SET_LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  units: 'metric',\r\n  lang: 'en',\r\n  loading: false,\r\n  alert: null,\r\n  places: [],\r\n  place: null,\r\n  current: {},\r\n  forecastToday: [],\r\n  forecast15: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_PLACES:\r\n      return {\r\n        ...state,\r\n        places: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_SEARCH:\r\n      return {\r\n        ...state,\r\n        places: []\r\n      };\r\n    case SELECT_PLACE:\r\n      return {\r\n        ...state,\r\n        place: action.payload\r\n      };\r\n    case GET_CURRENT_WEATHER:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case GET_TODAY_WEATHER:\r\n      return {\r\n        ...state,\r\n        forecastToday: action.payload\r\n      };\r\n    case GET_FORECAST:\r\n      return {\r\n        ...state,\r\n        forecast15: action.payload,\r\n        loading: false\r\n      };\r\n    case SWITCH_LANG:\r\n      return {\r\n        ...state,\r\n        lang: action.payload === 'en' ? 'ru' : 'en'\r\n      };\r\n    case SWITCH_UNITS:\r\n      return {\r\n        ...state,\r\n        units: action.payload === 'metric' ? 'imperial' : 'metric'\r\n      };\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: action.payload\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: null,\r\n        loading: false\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\n\r\nexport default combineReducers({\r\n  weather: weatherReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport Search from './components/places/Search';\nimport Forecast from './components/weather/Forecast';\nimport Places from './components/places/Places';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <div className='container'>\n            <Alert />\n            <Route path='/weather-app-redux' component={Search} />\n            <Switch>\n              <Route exact path='/weather-app-redux' component={Places} />\n              <Route\n                exact\n                path='/weather-app-redux/current/:name'\n                component={Forecast}\n              />\n              <Route exact path='/weather-app-redux/about' component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'moment/locale/ru';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}